{
  "swagger": "2.0",
  "info": {
    "title": "Task Manager API",
    "description": "API for managing tasks and users with CRUD operations",
    "version": "1.0.0"
  },
  "host": "task-manager-api-9tji.onrender.com",
  "basePath": "/api",
  "schemes": ["https"],
  "paths": {
    "/tasks": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get all tasks",
        "description": "Retrieves a list of all tasks",
        "responses": {
          "200": {
            "description": "List of all tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/Task" }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Tasks"],
        "summary": "Create a new task",
        "description": "Creates a new task with the provided details",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Task data",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "userId"],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the task",
                  "example": "Demo Task"
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the task",
                  "example": "Created for Week 06 demo"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the task",
                  "enum": ["pending", "in-progress", "completed"],
                  "example": "pending"
                },
                "dueDate": {
                  "type": "string",
                  "description": "The due date in ISO format (YYYY-MM-DD)",
                  "example": "2025-06-01"
                },
                "userId": {
                  "type": "string",
                  "description": "The ID of the user who owns the task",
                  "example": "1234567890abcdef12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Task created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/definitions/Task" }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "errors": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "tags": ["Tasks"],
        "summary": "Get a task by ID",
        "description": "Retrieves a single task by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/definitions/Task" }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "tags": ["Tasks"],
        "summary": "Update a task",
        "description": "Updates an existing task by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Task ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated task data",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["title", "userId"],
              "properties": {
                "title": {
                  "type": "string",
                  "description": "The title of the task",
                  "example": "Demo Task Updated"
                },
                "description": {
                  "type": "string",
                  "description": "A brief description of the task",
                  "example": "Updated for Week 06 demo"
                },
                "status": {
                  "type": "string",
                  "description": "The status of the task",
                  "enum": ["pending", "in-progress", "completed"],
                  "example": "completed"
                },
                "dueDate": {
                  "type": "string",
                  "description": "The due date in ISO format (YYYY-MM-DD)",
                  "example": "2025-06-01"
                },
                "userId": {
                  "type": "string",
                  "description": "The ID of the user who owns the task",
                  "example": "1234567890abcdef12345678"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/definitions/Task" }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "400": {
            "description": "Invalid data"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "errors": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tasks"],
        "summary": "Delete a task",
        "description": "Deletes a task by its ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Task ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "description": "Retrieves a list of all users (excludes passwords)",
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/definitions/User" }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Create a new user",
        "description": "Creates a new user with the provided details",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "type": "object",
              "required": ["username", "email", "password"],
              "properties": {
                "username": {
                  "type": "string",
                  "description": "The unique username for the user",
                  "example": "johndoe"
                },
                "email": {
                  "type": "string",
                  "description": "The user's email address",
                  "example": "john.doe@example.com"
                },
                "password": {
                  "type": "string",
                  "description": "The user's password (min 6 characters)",
                  "example": "secure123"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/definitions/User" }
              }
            }
          },
          "400": {
            "description": "Invalid data"
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": { "type": "string" },
                    "errors": { "type": "array", "items": { "type": "object" } }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Task": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "abcdef1234567890abcdef12"
        },
        "title": {
          "type": "string",
          "example": "Demo Task"
        },
        "description": {
          "type": "string",
          "example": "Created for Week 06 demo"
        },
        "status": {
          "type": "string",
          "example": "pending"
        },
        "dueDate": {
          "type": "string",
          "example": "2025-06-01"
        },
        "userId": {
          "type": "string",
          "example": "1234567890abcdef12345678"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
      
    "example": "1234567890abcdef12345678"
        },
        "username": {
          "type": "string",
          "example": "johndoe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com"
        },
        "createdAt": {
          "type": "string",
          "example": "2025-05-28T10:11:00.000Z"
        }
      }
    }
  }
}
